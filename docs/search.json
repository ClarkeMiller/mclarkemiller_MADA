[
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "New_Fitting_Exercise",
    "section": "",
    "text": "#The thing that kept tripping me up here was my own lack of R coding ability.  So I went through this exercise again and worked it out using the solutions provided by Dr. Handel.  The result is that I learned a bit about how to code this stuff.\n\n#I went ahead took a peek at the solutions that Dr. Handel posted.  Katie pointed out that since I had already blown the assignment and since I couldn't figure it out myself that I should probably stop being stubborn (her exact phrase was \"being a bone headed stubborn dumb-***\"... Love you, Katie!) and peek.  \n\n#Call a bunch of libraries.\nsuppressPackageStartupMessages(library(tidyverse))\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(tidymodels))\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\nWarning: package 'broom' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(broom)) \nsuppressPackageStartupMessages(library(here))\n\nWarning: package 'here' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(readxl))\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(readr)) \nsuppressPackageStartupMessages(library(dplyr)) \nsuppressPackageStartupMessages(library(tidyr)) \nsuppressPackageStartupMessages(library(skimr))\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(gt))\n\nWarning: package 'gt' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(dslabs))\n\nWarning: package 'dslabs' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(plotly))\n\nWarning: package 'plotly' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(gapminder))\n\nWarning: package 'gapminder' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(parsnip))\nsuppressPackageStartupMessages(library(tune))\nsuppressPackageStartupMessages(library(recipes))\nsuppressPackageStartupMessages(library(workflows))\nsuppressPackageStartupMessages(library(yardstick))\nsuppressPackageStartupMessages(library(rsample))\n#Data processing.\n\n#Load excel data file\ndata_location &lt;- here::here(\"Mavoglurant_A2121_nmpk.csv\")\nMav_data &lt;- read.csv(data_location)\n\n#Save a rds version\nsave_data_location &lt;- here::here(\"mav_data.rds\")\nsaveRDS(Mav_data, file = save_data_location)\nlibrary(ggplot2)\n\n#Initial Data Explore.  \nsummary(Mav_data)\n\n       ID             CMT             EVID              EVI2       \n Min.   :793.0   Min.   :1.000   Min.   :0.00000   Min.   :0.0000  \n 1st Qu.:832.0   1st Qu.:2.000   1st Qu.:0.00000   1st Qu.:0.0000  \n Median :860.0   Median :2.000   Median :0.00000   Median :0.0000  \n Mean   :858.8   Mean   :1.926   Mean   :0.07394   Mean   :0.1613  \n 3rd Qu.:888.0   3rd Qu.:2.000   3rd Qu.:0.00000   3rd Qu.:0.0000  \n Max.   :915.0   Max.   :2.000   Max.   :1.00000   Max.   :4.0000  \n      MDV                DV               LNDV            AMT        \n Min.   :0.00000   Min.   :   0.00   Min.   :0.000   Min.   : 0.000  \n 1st Qu.:0.00000   1st Qu.:  23.52   1st Qu.:3.158   1st Qu.: 0.000  \n Median :0.00000   Median :  74.20   Median :4.306   Median : 0.000  \n Mean   :0.09373   Mean   : 179.93   Mean   :4.085   Mean   : 2.763  \n 3rd Qu.:0.00000   3rd Qu.: 283.00   3rd Qu.:5.645   3rd Qu.: 0.000  \n Max.   :1.00000   Max.   :1730.00   Max.   :7.456   Max.   :50.000  \n      TIME             DOSE            OCC             RATE       \n Min.   : 0.000   Min.   :25.00   Min.   :1.000   Min.   :  0.00  \n 1st Qu.: 0.583   1st Qu.:25.00   1st Qu.:1.000   1st Qu.:  0.00  \n Median : 2.250   Median :37.50   Median :1.000   Median :  0.00  \n Mean   : 5.851   Mean   :37.37   Mean   :1.378   Mean   : 16.55  \n 3rd Qu.: 6.363   3rd Qu.:50.00   3rd Qu.:2.000   3rd Qu.:  0.00  \n Max.   :48.217   Max.   :50.00   Max.   :2.000   Max.   :300.00  \n      AGE            SEX             RACE              WT        \n Min.   :18.0   Min.   :1.000   Min.   : 1.000   Min.   : 56.60  \n 1st Qu.:26.0   1st Qu.:1.000   1st Qu.: 1.000   1st Qu.: 73.30  \n Median :31.0   Median :1.000   Median : 1.000   Median : 82.60  \n Mean   :32.9   Mean   :1.128   Mean   : 7.415   Mean   : 83.16  \n 3rd Qu.:40.0   3rd Qu.:1.000   3rd Qu.: 2.000   3rd Qu.: 90.60  \n Max.   :50.0   Max.   :2.000   Max.   :88.000   Max.   :115.30  \n       HT       \n Min.   :1.520  \n 1st Qu.:1.710  \n Median :1.780  \n Mean   :1.762  \n 3rd Qu.:1.820  \n Max.   :1.930  \n\nskimr::skim(Mav_data)\n\n\nData summary\n\n\nName\nMav_data\n\n\nNumber of rows\n2678\n\n\nNumber of columns\n17\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n17\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nID\n0\n1\n858.81\n34.08\n793.00\n832.00\n860.00\n888.00\n915.00\n▅▆▇▇▇\n\n\nCMT\n0\n1\n1.93\n0.26\n1.00\n2.00\n2.00\n2.00\n2.00\n▁▁▁▁▇\n\n\nEVID\n0\n1\n0.07\n0.26\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nEVI2\n0\n1\n0.16\n0.70\n0.00\n0.00\n0.00\n0.00\n4.00\n▇▁▁▁▁\n\n\nMDV\n0\n1\n0.09\n0.29\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nDV\n0\n1\n179.93\n226.28\n0.00\n23.52\n74.20\n283.00\n1730.00\n▇▂▁▁▁\n\n\nLNDV\n0\n1\n4.08\n1.88\n0.00\n3.16\n4.31\n5.64\n7.46\n▃▃▇▇▅\n\n\nAMT\n0\n1\n2.76\n10.32\n0.00\n0.00\n0.00\n0.00\n50.00\n▇▁▁▁▁\n\n\nTIME\n0\n1\n5.85\n8.91\n0.00\n0.58\n2.25\n6.36\n48.22\n▇▁▁▁▁\n\n\nDOSE\n0\n1\n37.37\n12.05\n25.00\n25.00\n37.50\n50.00\n50.00\n▇▁▁▁▇\n\n\nOCC\n0\n1\n1.38\n0.49\n1.00\n1.00\n1.00\n2.00\n2.00\n▇▁▁▁▅\n\n\nRATE\n0\n1\n16.55\n61.88\n0.00\n0.00\n0.00\n0.00\n300.00\n▇▁▁▁▁\n\n\nAGE\n0\n1\n32.90\n8.87\n18.00\n26.00\n31.00\n40.00\n50.00\n▆▇▅▅▅\n\n\nSEX\n0\n1\n1.13\n0.33\n1.00\n1.00\n1.00\n1.00\n2.00\n▇▁▁▁▁\n\n\nRACE\n0\n1\n7.41\n21.97\n1.00\n1.00\n1.00\n2.00\n88.00\n▇▁▁▁▁\n\n\nWT\n0\n1\n83.16\n12.48\n56.60\n73.30\n82.60\n90.60\n115.30\n▂▇▇▅▁\n\n\nHT\n0\n1\n1.76\n0.08\n1.52\n1.71\n1.78\n1.82\n1.93\n▁▃▆▇▃\n\n\n\n\nplot_DV_vs_time &lt;- ggplot(Mav_data, aes(x=TIME, y=DV)) + geom_point() + theme_classic() + labs(title = \"DV vs. Time\", x=\"DV\", y=\"Time\")\n\nplot(plot_DV_vs_time)\n\n\n\n\n\n\n\np1 &lt;- Mav_data %&gt;% ggplot() +\n  geom_line( aes( x = TIME, y = DV, group = as.factor(ID), color = as.factor(DOSE)) ) +\n  facet_wrap( ~ DOSE, scales = \"free_y\")\nplot(p1)\n\n\n\n\n\n\n\np2 &lt;- ggplot(Mav_data, aes(x=TIME, y=DV)) +\n  geom_line( aes( x = TIME, y = DV, group = as.factor(ID), color = as.factor(DOSE)) ) +\n  facet_wrap( ~ DOSE, scales = \"free_y\")\nplot(p2)\n#Keeping only OCC=1.\nOCC_Mav1 &lt;- Mav_data %&gt;% filter(OCC == 1)\nOCC_Mav1 &lt;- OCC_Mav1 %&gt;% filter(OCC == 1)\nOCC_Mav1 &lt;- na.omit(OCC_Mav1)\n\nDV_Mav1 &lt;- OCC_Mav1 %&gt;% filter(DV &gt; 0)\nDV_Mav1 &lt;- DV_Mav1 %&gt;% filter(DV &gt; 0)\nDV_Mav1 &lt;- na.omit(DV_Mav1)\n\ndf_Y &lt;- OCC_Mav1 %&gt;% filter(TIME &gt; 0) %&gt;% group_by(ID) %&gt;% summarise(Y=sum(DV))\ndf_time0 &lt;- OCC_Mav1 %&gt;% filter(TIME == 0)\nCombo_Mav1 &lt;- left_join(df_Y, df_time0, by = \"ID\")\n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% \n  select(Y,DOSE,AGE,SEX,RACE,WT,HT)\n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(RACE = ifelse(RACE %in% c(7,88), 3, RACE ))\n\n#HT is in meters, WT is in kilograms.\nCombo_Mav1$BMI &lt;- Combo_Mav1$WT / ((Combo_Mav1$HT)^2)  \n\n#SEX as a number/factor\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(\n  SEX = ifelse(SEX == 1, \"M\", \"F\" ),\n  SEX = factor(SEX)\n  )\n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(\n    RACE = factor(RACE)\n  )\n\nprint(Combo_Mav1)\n\n# A tibble: 120 × 8\n       Y  DOSE   AGE SEX   RACE     WT    HT   BMI\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2691.    25    42 M     2      94.3  1.77  30.1\n 2 2639.    25    24 M     2      80.4  1.76  26.0\n 3 2150.    25    31 M     1      71.8  1.81  21.9\n 4 1789.    25    46 F     1      77.4  1.65  28.4\n 5 3126.    25    41 F     2      64.3  1.56  26.4\n 6 2337.    25    27 M     2      74.1  1.83  22.1\n 7 3007.    25    23 M     1      87.9  1.85  25.7\n 8 2796.    25    20 M     3      61.9  1.73  20.7\n 9 3866.    25    23 M     2      65.3  1.65  24.0\n10 1762.    25    28 M     1     104.   1.84  30.6\n# ℹ 110 more rows\n\n#Okay, that looks pretty good.\n#Model Fitting\n\n# fit the linear models with Y as outcome \n# first model has only DOSE as predictor\n# second model has all variables as predictors\nlin_mod &lt;- linear_reg() %&gt;% set_engine(\"lm\")\nlinfit1 &lt;- lin_mod %&gt;% fit(Y ~ DOSE, data = Combo_Mav1)\nlinfit2 &lt;- lin_mod %&gt;% fit(Y ~ ., data = Combo_Mav1)\n\n# Compute the RMSE and R squared for model 1\nmetrics_1 &lt;- linfit1 %&gt;% \n  predict(Combo_Mav1) %&gt;% \n  bind_cols(Combo_Mav1) %&gt;% \n  metrics(truth = Y, estimate = .pred)\n\n# Compute the RMSE and R squared for model 2\nmetrics_2 &lt;- linfit2 %&gt;% \n  predict(Combo_Mav1) %&gt;% \n  bind_cols(Combo_Mav1) %&gt;% \n  metrics(truth = Y, estimate = .pred)\n\n# Print the results\nprint(metrics_1)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard     666.   \n2 rsq     standard       0.516\n3 mae     standard     517.   \n\nprint(metrics_2)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard     572.   \n2 rsq     standard       0.644\n3 mae     standard     443.\n#Logistic Models\n\n# fit the logistic models with SEX as outcome \n# first model has only DOSE as predictor\n# second model has all variables as predictors\nlog_mod &lt;- logistic_reg() %&gt;% set_engine(\"glm\")\nlogfit1 &lt;- log_mod %&gt;% fit(SEX ~ DOSE, data = Combo_Mav1)\nlogfit2 &lt;- log_mod %&gt;% fit(SEX ~ ., data = Combo_Mav1)\n\n# Compute the accuracy for model 1\nm1_acc &lt;- logfit1 %&gt;% \n  predict(Combo_Mav1) %&gt;% \n  bind_cols(Combo_Mav1) %&gt;% \n  metrics(truth = SEX, estimate = .pred_class) %&gt;% \n  filter(.metric == \"accuracy\") \n\n\n# Compute the accuracy for model 2\nm2_acc &lt;- logfit2 %&gt;% \n  predict(Combo_Mav1) %&gt;% \n  bind_cols(Combo_Mav1) %&gt;% \n  metrics(truth = SEX, estimate = .pred_class) %&gt;% \n  filter(.metric %in% c(\"accuracy\"))\n\n# Print the results\nprint(m1_acc)\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.867\n\nprint(m2_acc)\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.942"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#unit-10-material",
    "href": "fitting-exercise/fitting-exercise.html#unit-10-material",
    "title": "New_Fitting_Exercise",
    "section": "Unit 10 Material",
    "text": "Unit 10 Material\n\n#Part 10 Material.\n\n#Okay, since I have already gotten all of my data loaded and prepped, see the data section above, I don't need to load anything up and clean it.  All those steps are already done since I did the data part all at once for the models exercise and then just copied it here.\n\n#But I will set a seed!\n\n#Once again, part of this code is mine and worked (mostly the data manipulation) and part is from the key from Dr. Handel.\n\nrngseed=1234\n\n#Getting rid of RACE.\n\nCombo_Mav2 &lt;- Combo_Mav1 %&gt;% \n  select(Y,DOSE,AGE,SEX,WT,HT)\n\nprint(Combo_Mav2)\n\n# A tibble: 120 × 6\n       Y  DOSE   AGE SEX      WT    HT\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2691.    25    42 M      94.3  1.77\n 2 2639.    25    24 M      80.4  1.76\n 3 2150.    25    31 M      71.8  1.81\n 4 1789.    25    46 F      77.4  1.65\n 5 3126.    25    41 F      64.3  1.56\n 6 2337.    25    27 M      74.1  1.83\n 7 3007.    25    23 M      87.9  1.85\n 8 2796.    25    20 M      61.9  1.73\n 9 3866.    25    23 M      65.3  1.65\n10 1762.    25    28 M     104.   1.84\n# ℹ 110 more rows\n\n#Okay, this water is a bit deep for me.\nset.seed(rngseed)\ndata_split &lt;- initial_split(Combo_Mav2, prop = 3/4)\n\n# Create data frames for the two sets:\ntrain_data &lt;- training(data_split)\ntest_data  &lt;- testing(data_split)\n\n# record number of observations in each dataset, need that later -- This is Dr. Handel's\nNtrain = nrow(train_data)\nNtest = nrow(test_data)\n\nprint(train_data)\n\n# A tibble: 90 × 6\n       Y  DOSE   AGE SEX      WT    HT\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 3004.  50      28 M      83.2  1.74\n 2 1347.  25      41 M      81    1.75\n 3 2772.  37.5    28 M      78.3  1.72\n 4 2028.  25      28 F      58.9  1.58\n 5 2353.  50      37 M      99.1  1.78\n 6  826.  25      30 M     105.   1.88\n 7 3866.  25      23 M      65.3  1.65\n 8 3126.  25      41 F      64.3  1.56\n 9 1108.  25      48 F      79.5  1.62\n10 2815.  37.5    26 M      84.5  1.77\n# ℹ 80 more rows\n\nprint(test_data)\n\n# A tibble: 30 × 6\n       Y  DOSE   AGE SEX      WT    HT\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2549.  25      46 M      83    1.78\n 2 2353.  37.5    43 F      64.4  1.56\n 3 2009.  37.5    19 M      86.1  1.91\n 4 2934.  37.5    46 M      71.2  1.67\n 5 2085.  37.5    37 M     102.   1.81\n 6 4835.  50      42 F      58    1.58\n 7 3514.  50      32 M      78.9  1.74\n 8 3906.  50      47 M      89.3  1.69\n 9 3105.  50      45 M      99.1  1.81\n10 2027.  25      20 M      80.5  1.88\n# ℹ 20 more rows\n\n#Okay, that worked.  What now?  Fit models to outcome Y for dose and all remaining variables?  And find the RMSE.  Okay. Here goes.\n\n#My first try, without actually making a model.  In my head, I thought that a linear regression WAS a model.\n\n#First, DOSE.\n\nlmfitC1 &lt;- lm(Y ~ DOSE, train_data)  \n\n# place results from fit into a data frame with the tidy function\nlmtableC1 &lt;- broom::tidy(lmfitC1)\n\n#look at fit results\nprint(lmtableC1)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)    535.     244.        2.19 3.08e- 2\n2 DOSE            53.4      6.29      8.50 4.41e-13\n\n# Predict the values using the model\npredictions &lt;- predict(lmfitC1, train_data)\n\n# Calculate the residuals (differences between observed and predicted values)\nresiduals1 &lt;- train_data$Y - predictions\n\n# Calculate the RMSE\nrmse1 &lt;- sqrt(mean(residuals1^2))\n\n# Print the RMSE\nprint(rmse1)\n\n[1] 702.8078\n\n#Then All of them!\n\nlmfitC2 &lt;- lm(Y ~ AGE + DOSE + SEX + WT + HT, train_data) \n\n\n# place results from fit into a data frame with the tidy function\nlmtableC2 &lt;- broom::tidy(lmfitC2)\n\n#look at fit results\nprint(lmtableC2)\n\n# A tibble: 6 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  3828.      2039.      1.88   6.40e- 2\n2 AGE            -0.417      9.50   -0.0439 9.65e- 1\n3 DOSE           55.3        5.83    9.49   6.09e-15\n4 SEXM          569.       285.      1.99   4.95e- 2\n5 WT            -22.6        7.65   -2.96   4.00e- 3\n6 HT          -1130.      1358.     -0.832  4.08e- 1\n\n# Predict the values using the model\npredictions &lt;- predict(lmfitC2, train_data)\n\n# Calculate the residuals (differences between observed and predicted values)\nresiduals2 &lt;- train_data$Y - predictions\n\n# Calculate the RMSE\nrmse2 &lt;- sqrt(mean(residuals2^2))\n\n# Print the RMSE\nprint(rmse2)\n\n[1] 627.4408\n\n#This was my attempt at a model:\n#Trying it this way... with train data.\nlinear_reg() %&gt;% set_engine(\"glm\")\n\nLinear Regression Model Specification (regression)\n\nComputational engine: glm \n\nmodel_trial &lt;- linear_reg()\nfit_trial1 &lt;- model_trial %&gt;% fit(Y ~ AGE * DOSE * SEX * WT * HT, data = train_data)\n\ntidy(fit_trial1)\n\n# A tibble: 32 × 5\n   term         estimate std.error statistic p.value\n   &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n 1 (Intercept)  203179.    458412.     0.443   0.659\n 2 AGE           -6174.     10657.    -0.579   0.564\n 3 DOSE          -1872.      8027.    -0.233   0.816\n 4 SEXM        -107926.    359517.    -0.300   0.765\n 5 WT             -953.      6595.    -0.145   0.886\n 6 HT          -103258.    265690.    -0.389   0.699\n 7 AGE:DOSE        106.       242.     0.437   0.664\n 8 AGE:SEXM       5065.      5776.     0.877   0.384\n 9 DOSE:SEXM     -1198.      2179.    -0.550   0.584\n10 AGE:WT           15.9      111.     0.143   0.886\n# ℹ 22 more rows\n\npredictions &lt;- predict(fit_trial1, train_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\", : prediction from rank-deficient fit; consider predict(.,\nrankdeficient=\"NA\")\n\nresiduals_mod &lt;- train_data$Y - predictions\nrmse_mod &lt;- sqrt(mean(residuals_mod^2))\n\nWarning in mean.default(residuals_mod^2): argument is not numeric or logical:\nreturning NA\n\nprint(rmse_mod)\n\n[1] NA\n\n#Obviously I did not understand what I was doing.\n\n#This is a general linear model.\nmod &lt;- linear_reg() %&gt;% set_engine(\"lm\")\n\n## ---- model1 --------  \nwflow1 &lt;- \n    workflow() %&gt;% \n    add_model(mod) %&gt;%    #Here we are using the linear modle defined above.\n    add_formula(Y ~ DOSE)\nfit1 &lt;- wflow1 %&gt;% fit(data = train_data)\n\n\n## ---- model2 --------\nwflow2 &lt;- wflow1 %&gt;% update_formula(Y ~ .)\nfit2 &lt;- wflow2 %&gt;% fit(data = train_data)\n\n\n## ---- preds --------\npred1 &lt;- fit1 %&gt;% predict(train_data)\npred2 &lt;- fit2 %&gt;% predict(train_data)\n# null model, only predicts the mean for everyone\npred0 &lt;- rep(mean(train_data$Y),Ntrain)\n\n## ---- rmse --------\n# Compute the RMSE and R squared for model 1\nrmse_train_1 &lt;-  bind_cols(train_data, pred1) %&gt;% \n    rmse(truth = Y, estimate = .pred) \n\n# Compute the RMSE and R squared for model 2\nrmse_train_2 &lt;- bind_cols(train_data, pred2) %&gt;% \n    rmse(truth = Y, estimate = .pred) \n\n# Compute RMSE for a dumb null model\nrmse_train_0 &lt;-  rmse_vec(truth = train_data$Y, estimate = pred0) \n\n# Print the results\nmetrics = data.frame(model = c(\"null model\",\"model 1\",\"model 2\"), \n                                         rmse = c(rmse_train_0, \n                                                         rmse_train_1$.estimate, \n                                                         rmse_train_2$.estimate) )\nprint(metrics)\n\n       model     rmse\n1 null model 948.3526\n2    model 1 702.8078\n3    model 2 627.4408\n\n\n#I kept getting an error here that said that it couldn’t find my data.\n#Okay, now we are going to evaluate our model. suppressPackageStartupMessages(library(modeldata)) suppressPackageStartupMessages(library(recipes))\nrnseed = 1234 set.seed(rnseed)\ndata_split &lt;- initial_split(Combo_Mav2, prop = 0.9)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Warning: package 'here' was built under R version 4.3.3\n\n\nWarning: package 'knitr' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "General Background Information",
    "text": "General Background Information\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla congue vestibulum lorem in maximus. Pellentesque fermentum, elit in venenatis congue, sem sapien bibendum tellus, nec bibendum diam dui sit amet enim. Quisque sed laoreet elit. Donec feugiat tellus nec malesuada aliquam. Nam eu mi sed magna efficitur tempor. Ut vitae sagittis massa. Nunc eget iaculis nisl. Aenean rutrum vestibulum aliquam."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nCurabitur consequat auctor blandit. Mauris et imperdiet est. Morbi eget viverra nisl, sit amet ultricies sapien. Nulla sit amet tortor aliquam, blandit tellus vitae, aliquet massa. Fusce erat leo, commodo a diam ac, porttitor mollis purus. Sed tristique gravida elementum. Maecenas quis leo bibendum, rhoncus ex vel, cursus ipsum. Ut libero felis, euismod ultrices eros sit amet, consectetur suscipit lacus. Vivamus mauris metus, tempus nec vulputate sed, posuere placerat neque. Curabitur vehicula sagittis felis. Vestibulum maximus enim in orci vulputate rutrum."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a]"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Data aquisition",
    "text": "Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Statistical analysis",
    "text": "Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Exploratory/Descriptive analysis",
    "text": "Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nSmoke\n0\n1\n1\n1\n0\n2\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\ncharacter\nAlcohol\n0\n1\n1\n1\n0\n2\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.976545\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.245261\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nAlkyAge\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n17.77778\n2.905933\n14\n16\n18\n21\n21\n▅▅▂▂▇\n\n\nnumeric\nAge\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n38.33333\n7.399324\n22\n36\n38\n42\n48\n▂▁▇▇▅"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Full analysis",
    "text": "Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Strengths and Limitations",
    "text": "Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Conclusions",
    "text": "Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper [@leek2015] discusses types of analyses.\nThese papers [@mckay2020; @mckay2020a] are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/mclar/Desktop/EPID 8060e/Repository/mclarkemiller_MADA\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 7 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n4 Smoke           Ever Smoke                            Y/N                   \n5 Alcohol         Ever consume Alcohol                  Y/N                   \n6 Age Frist Alchy Age First Consume Alcohol             number &gt;0 or NA       \n7 Age             current age                           number &gt;0 or NA       \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 7\n$ Height  &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\",…\n$ Weight  &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender  &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"…\n$ Smoke   &lt;chr&gt; \"Y\", \"N\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N…\n$ Alcohol &lt;chr&gt; \"Y\", \"Y\", \"N\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"Y\", \"Y\", \"Y\", \"N…\n$ AlkyAge &lt;dbl&gt; 16, 18, 21, 21, 18, 19, 16, 14, 18, 21, 12, 14, 21, 21\n$ Age     &lt;dbl&gt; 36, 42, 56, 38, 24, 48, 45, 37, 86, 35, 27, 41, 22, 36\n\nsummary(rawdata)\n\n    Height              Weight          Gender             Smoke          \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n   Alcohol             AlkyAge           Age       \n Length:14          Min.   :12.00   Min.   :22.00  \n Class :character   1st Qu.:16.00   1st Qu.:35.25  \n Mode  :character   Median :18.00   Median :37.50  \n                    Mean   :17.86   Mean   :40.93  \n                    3rd Qu.:21.00   3rd Qu.:44.25  \n                    Max.   :21.00   Max.   :86.00  \n                                                   \n\nhead(rawdata)\n\n# A tibble: 6 × 7\n  Height Weight Gender Smoke Alcohol AlkyAge   Age\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 180        80 M      Y     Y            16    36\n2 175        70 O      N     Y            18    42\n3 sixty      60 F      N     N            21    56\n4 178        76 F      N     N            21    38\n5 192        90 NA     N     Y            18    24\n6 6          55 F      N     N            19    48\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70.0\n90.00\n7000\n▇▁▁▁▁\n\n\nAlkyAge\n0\n1.00\n17.86\n3.06\n12\n16.00\n18.0\n21.00\n21\n▂▃▃▆▇\n\n\nAge\n0\n1.00\n40.93\n15.87\n22\n35.25\n37.5\n44.25\n86\n▃▇▂▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAlkyAge\n0\n1.00\n17.62\n3.04\n12\n16.00\n18\n21\n21\n▂▃▃▇▇\n\n\nAge\n0\n1.00\n39.77\n15.89\n22\n35.00\n37\n42\n86\n▃▇▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAlkyAge\n0\n1.00\n17.62\n3.04\n12\n16.00\n18\n21\n21\n▂▃▃▇▇\n\n\nAge\n0\n1.00\n39.77\n15.89\n22\n35.00\n37\n42\n86\n▃▇▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAlkyAge\n0\n1\n17.82\n2.60\n14\n16.0\n18\n20.0\n21\n▅▅▇▂▇\n\n\nAge\n0\n1\n41.36\n16.78\n22\n36.0\n38\n43.5\n86\n▂▇▁▁▁\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nfactor\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAlkyAge\n0\n1\n17.82\n2.60\n14\n16.0\n18\n20.0\n21\n▅▅▇▂▇\n\n\nAge\n0\n1\n41.36\n16.78\n22\n36.0\n38\n43.5\n86\n▂▇▁▁▁\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nfactor\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSmoke\n0\n1\n1\n1\n0\n2\n0\n\n\nAlcohol\n0\n1\n1\n1\n0\n2\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAlkyAge\n0\n1\n17.78\n2.91\n14\n16\n18\n21\n21\n▅▅▂▂▇\n\n\nAge\n0\n1\n38.33\n7.40\n22\n36\n38\n42\n48\n▂▁▇▇▅\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/mclar/Desktop/EPID 8060e/Repository/mclarkemiller_MADA\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "In this section I looked for data on the current state of the flu in the US. I found a nice figure at the CDC Weekly U.S. Influenza Surveillance Report. (https://www.cdc.gov/flu/weekly/index.htm) The graph was titled “Influenza Positive Tests Reported to CDC by U.S. Public Health Laboratories, National Summary, 2023-2024 Season” (See figure 1 below.)"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#part-1-finding-a-graph-and-grabbing-the-data.",
    "href": "presentation-exercise/presentation-exercise.html#part-1-finding-a-graph-and-grabbing-the-data.",
    "title": "Presentation Exercise",
    "section": "",
    "text": "In this section I looked for data on the current state of the flu in the US. I found a nice figure at the CDC Weekly U.S. Influenza Surveillance Report. (https://www.cdc.gov/flu/weekly/index.htm) The graph was titled “Influenza Positive Tests Reported to CDC by U.S. Public Health Laboratories, National Summary, 2023-2024 Season” (See figure 1 below.)"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#figure-1-influenza-positive-tests",
    "href": "presentation-exercise/presentation-exercise.html#figure-1-influenza-positive-tests",
    "title": "Presentation Exercise",
    "section": "Figure 1: Influenza Positive Tests",
    "text": "Figure 1: Influenza Positive Tests\nReported to CDC by U.S. Public Health Laboratories National Summary, 2023-2024 Season\n\nNow I will try to recreate this figure. My efforts on this project were aided by input from the ChatGPT AI."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#grab-the-data-copy-data-to-a-excel-and-load-from-there.",
    "href": "presentation-exercise/presentation-exercise.html#grab-the-data-copy-data-to-a-excel-and-load-from-there.",
    "title": "Presentation Exercise",
    "section": "Grab the data: Copy data to a Excel and load from there.",
    "text": "Grab the data: Copy data to a Excel and load from there.\nEasy-peasy-lemon-squeezy! Full disclosure, I tried to load the data directly from the CDC website (as was suggested by ChatGPT) and it did not work well. I got a bunch of unusable gibberish. For now I’m going to stick to the the space or tab delineated data files!\n\n#Call a bunch of libraries.\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(broom)) \nsuppressPackageStartupMessages(library(here))\n\nWarning: package 'here' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(readxl)) \nsuppressPackageStartupMessages(library(dplyr)) \nsuppressPackageStartupMessages(library(tidyr)) \nsuppressPackageStartupMessages(library(skimr))\n\n#Load excel data file\n#Data file from CDC \"COVID-19_Vaccinations_in_the_United_States_Jurisdiction_20240208\"\ndata_location &lt;- here::here(\"presentation-exercise\",\"Flu Chart Data.xlsx\")\nCDC_data_flu &lt;- readxl::read_excel(data_location)\n\n\n#Save a rds version\nsave_data_location &lt;- here::here(\"presentation-exercise\",\"CDC_Flu_Chart_Data.rds\")\nsaveRDS(CDC_data_flu, file = save_data_location)\n\n#Take a squinty\ndplyr::glimpse(CDC_data_flu)\n\nRows: 18\nColumns: 10\n$ Week                      &lt;dttm&gt; 2023-10-08, 2023-10-15, 2023-10-22, 2023-10…\n$ A_H3N2v                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ A_H1N1_pdm09              &lt;dbl&gt; 176, 212, 274, 239, 290, 478, 482, 573, 699,…\n$ A_H3N2                    &lt;dbl&gt; 16, 22, 26, 36, 41, 61, 102, 124, 176, 270, …\n$ A_Unable_to_Subtype       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ A_Subtyping_not_performed &lt;dbl&gt; 10, 13, 33, 49, 64, 115, 153, 139, 173, 244,…\n$ B                         &lt;dbl&gt; 3, 5, 11, 14, 15, 32, 44, 28, 25, 54, 94, 43…\n$ BVIC                      &lt;dbl&gt; 48, 68, 73, 68, 88, 130, 140, 139, 217, 258,…\n$ BYAM                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Total _Tested`           &lt;dbl&gt; 3054, 3057, 3401, 2916, 3152, 3288, 3888, 30…\n\nsummary(CDC_data_flu)\n\n      Week                        A_H3N2v   A_H1N1_pdm09        A_H3N2     \n Min.   :2023-10-08 00:00:00   Min.   :0   Min.   : 176.0   Min.   : 16.0  \n 1st Qu.:2023-11-06 18:00:00   1st Qu.:0   1st Qu.: 278.0   1st Qu.: 46.0  \n Median :2023-12-06 12:00:00   Median :0   Median : 540.0   Median :153.0  \n Mean   :2023-12-06 12:00:00   Mean   :0   Mean   : 609.6   Mean   :165.7  \n 3rd Qu.:2024-01-05 06:00:00   3rd Qu.:0   3rd Qu.: 918.8   3rd Qu.:277.5  \n Max.   :2024-02-04 00:00:00   Max.   :0   Max.   :1195.0   Max.   :318.0  \n A_Unable_to_Subtype A_Subtyping_not_performed       B              BVIC       \n Min.   :0           Min.   : 10.00            Min.   : 3.00   Min.   : 48.00  \n 1st Qu.:0           1st Qu.: 76.75            1st Qu.:17.50   1st Qu.: 90.75  \n Median :0           Median :198.00            Median :38.50   Median :159.50  \n Mean   :0           Mean   :186.00            Mean   :41.78   Mean   :163.83  \n 3rd Qu.:0           3rd Qu.:277.75            3rd Qu.:63.00   3rd Qu.:216.75  \n Max.   :0           Max.   :423.00            Max.   :97.00   Max.   :279.00  \n      BYAM   Total _Tested \n Min.   :0   Min.   :2790  \n 1st Qu.:0   1st Qu.:3081  \n Median :0   Median :3606  \n Mean   :0   Mean   :3798  \n 3rd Qu.:0   3rd Qu.:4465  \n Max.   :0   Max.   :5009  \n\nhead(CDC_data_flu)\n\n# A tibble: 6 × 10\n  Week                A_H3N2v A_H1N1_pdm09 A_H3N2 A_Unable_to_Subtype\n  &lt;dttm&gt;                &lt;dbl&gt;        &lt;dbl&gt;  &lt;dbl&gt;               &lt;dbl&gt;\n1 2023-10-08 00:00:00       0          176     16                   0\n2 2023-10-15 00:00:00       0          212     22                   0\n3 2023-10-22 00:00:00       0          274     26                   0\n4 2023-10-29 00:00:00       0          239     36                   0\n5 2023-11-05 00:00:00       0          290     41                   0\n6 2023-11-12 00:00:00       0          478     61                   0\n# ℹ 5 more variables: A_Subtyping_not_performed &lt;dbl&gt;, B &lt;dbl&gt;, BVIC &lt;dbl&gt;,\n#   BYAM &lt;dbl&gt;, `Total _Tested` &lt;dbl&gt;\n\nskimr::skim(CDC_data_flu)\n\n\nData summary\n\n\nName\nCDC_data_flu\n\n\nNumber of rows\n18\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n9\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nA_H3N2v\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nA_H1N1_pdm09\n0\n1\n609.56\n341.34\n176\n278.00\n540.0\n918.75\n1195\n▇▅▂▃▃\n\n\nA_H3N2\n0\n1\n165.72\n114.84\n16\n46.00\n153.0\n277.50\n318\n▇▃▁▁▇\n\n\nA_Unable_to_Subtype\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nA_Subtyping_not_performed\n0\n1\n186.00\n121.96\n10\n76.75\n198.0\n277.75\n423\n▇▆▆▆▂\n\n\nB\n0\n1\n41.78\n28.97\n3\n17.50\n38.5\n63.00\n97\n▇▆▆▅▃\n\n\nBVIC\n0\n1\n163.83\n78.78\n48\n90.75\n159.5\n216.75\n279\n▇▆▂▆▆\n\n\nBYAM\n0\n1\n0.00\n0.00\n0\n0.00\n0.0\n0.00\n0\n▁▁▇▁▁\n\n\nTotal _Tested\n0\n1\n3798.11\n773.46\n2790\n3080.75\n3606.5\n4465.00\n5009\n▇▃▂▃▅\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nWeek\n0\n1\n2023-10-08\n2024-02-04\n2023-12-06 12:00:00\n18\n\n\n\n\nclass(CDC_data_flu $Location)\n\nWarning: Unknown or uninitialised column: `Location`.\n\n\n[1] \"NULL\""
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#graph-it-all",
    "href": "presentation-exercise/presentation-exercise.html#graph-it-all",
    "title": "Presentation Exercise",
    "section": "Graph it all!",
    "text": "Graph it all!\nThe “seed” for this code was provided by ChatGPT. It took quite a bit of correction to get it to work properly. One big hurdle was that the data for the week provided by the CDC created a large gap in the graph. Instead of date data it was recorded as a specific week. i.e. 202340. (See Figure 2 below.) Another thing that I noticed right off the bat, not all of the categories are showing up. Some categories, such as A(H3N2v) and B(YAM), have no values so we wouldn’t expect them to show up. That being said, at least 5 different categories should show up in the rendering.\n\nsuppressPackageStartupMessages(library(ggplot2))\n\n# Plot the data using a layered bar graph\nggplot(CDC_data_flu, aes(x = Week)) +\n  geom_bar(aes(y = A_Subtyping_not_performed, fill = \"A Subtyping not performed\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_Unable_to_Subtype, fill = \"A Unable to Subtype\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_H1N1_pdm09, fill = \"A (H1N1)pdm09\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_H3N2, fill = \"A (H3N2)\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_H3N2v, fill = \"A H3N2v\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = B, fill = \"B (Linage Not Perfromed)\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = BVIC, fill = \"B Victoria Lineage\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = BYAM, fill = \"B Yamagata Lineage\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  labs(title = \"Influenza Positive Tests Reported to CDC\",\n       subtitle = \"U.S. Public Health Laboratories, National Summary, 2023-2024 Season\",\n       x = \"Week\",\n       y = \"Number of Positive Specimens\",\n       fill = \"Influenza Type\") + \n  theme_minimal()"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#figure-2-data-used-to-create-figure1.",
    "href": "presentation-exercise/presentation-exercise.html#figure-2-data-used-to-create-figure1.",
    "title": "Presentation Exercise",
    "section": "Figure 2: Data used to create Figure1.",
    "text": "Figure 2: Data used to create Figure1."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#making-a-publication-quality-figure.",
    "href": "presentation-exercise/presentation-exercise.html#making-a-publication-quality-figure.",
    "title": "Presentation Exercise",
    "section": "Making a publication quality figure.",
    "text": "Making a publication quality figure.\nWow. So I am still very new to programming anything with R. I don’t think that I’m going to be reaching for an interactive figure/table. (Sorry, folks!) However, let’s see if we can’t make a decent looking table.\n\n#Let's filter the data to get rid of the columns with all zero and take a quick look!\nCDC_data_flu &lt;- CDC_data_flu %&gt;% \n  select(Week, A_H1N1_pdm09, A_H3N2, A_Subtyping_not_performed, B, BVIC, `Total _Tested`)\n\nlibrary(gt)\nCDC_data_flu |&gt; \n  gt() \n\n\n\n\n\n\n\nWeek\nA_H1N1_pdm09\nA_H3N2\nA_Subtyping_not_performed\nB\nBVIC\nTotal _Tested\n\n\n\n\n2023-10-08\n176\n16\n10\n3\n48\n3054\n\n\n2023-10-15\n212\n22\n13\n5\n68\n3057\n\n\n2023-10-22\n274\n26\n33\n11\n73\n3401\n\n\n2023-10-29\n239\n36\n49\n14\n68\n2916\n\n\n2023-11-05\n290\n41\n64\n15\n88\n3152\n\n\n2023-11-12\n478\n61\n115\n32\n130\n3288\n\n\n2023-11-19\n482\n102\n153\n44\n140\n3888\n\n\n2023-11-26\n573\n124\n139\n28\n139\n3007\n\n\n2023-12-03\n699\n176\n173\n25\n217\n4198\n\n\n2023-12-10\n962\n270\n244\n54\n258\n4491\n\n\n2023-12-17\n977\n280\n423\n94\n279\n4943\n\n\n2023-12-24\n1195\n318\n311\n43\n256\n5009\n\n\n2023-12-31\n1159\n284\n286\n34\n214\n4387\n\n\n2024-01-07\n1028\n308\n304\n66\n278\n4743\n\n\n2024-01-14\n789\n286\n326\n72\n216\n4829\n\n\n2024-01-21\n662\n235\n229\n43\n179\n3534\n\n\n2024-01-28\n507\n268\n253\n72\n199\n3679\n\n\n2024-02-04\n270\n130\n223\n97\n99\n2790\n\n\n\n\n\n\n\nYikes! The commands worked, but this table looks hideous! Let’s give a few of the variables better names. A_Subtyping_not_performed is a bit long and ridiculous.\n\nCDC_data_flu |&gt; \n  gt() |&gt; \n  cols_label(\n    Week = 'Week',\n    A_H1N1_pdm09 = 'A (H1N1) pdm09',\n    A_H3N2 = 'A H3N2',\n    A_Subtyping_not_performed = 'A Subtype Unperf',\n    B = 'B',\n    BVIC = 'B Victoria',\n    `Total _Tested`= 'Total Tested'\n  )\n\n\n\n\n\n\n\nWeek\nA (H1N1) pdm09\nA H3N2\nA Subtype Unperf\nB\nB Victoria\nTotal Tested\n\n\n\n\n2023-10-08\n176\n16\n10\n3\n48\n3054\n\n\n2023-10-15\n212\n22\n13\n5\n68\n3057\n\n\n2023-10-22\n274\n26\n33\n11\n73\n3401\n\n\n2023-10-29\n239\n36\n49\n14\n68\n2916\n\n\n2023-11-05\n290\n41\n64\n15\n88\n3152\n\n\n2023-11-12\n478\n61\n115\n32\n130\n3288\n\n\n2023-11-19\n482\n102\n153\n44\n140\n3888\n\n\n2023-11-26\n573\n124\n139\n28\n139\n3007\n\n\n2023-12-03\n699\n176\n173\n25\n217\n4198\n\n\n2023-12-10\n962\n270\n244\n54\n258\n4491\n\n\n2023-12-17\n977\n280\n423\n94\n279\n4943\n\n\n2023-12-24\n1195\n318\n311\n43\n256\n5009\n\n\n2023-12-31\n1159\n284\n286\n34\n214\n4387\n\n\n2024-01-07\n1028\n308\n304\n66\n278\n4743\n\n\n2024-01-14\n789\n286\n326\n72\n216\n4829\n\n\n2024-01-21\n662\n235\n229\n43\n179\n3534\n\n\n2024-01-28\n507\n268\n253\n72\n199\n3679\n\n\n2024-02-04\n270\n130\n223\n97\n99\n2790\n\n\n\n\n\n\n\nOkay, that looks a bit spiffier. Let’s add a few column spanners just for fun.\n\nCDC_data_flu |&gt; \n  gt() |&gt; \n  cols_label(\n    Week = 'Week',\n    A_H1N1_pdm09 = 'A (H1N1) pdm09',\n    A_H3N2 = 'A H3N2',\n    A_Subtyping_not_performed = 'A Subtype Unperf',\n    B = 'B',\n    BVIC = 'B Victoria',\n    `Total _Tested`= 'Total Tested'\n  ) |&gt; \n  tab_spanner(\n    label = md('**A Strains**'),\n    columns = c('A_H1N1_pdm09', 'A_H3N2', 'A_Subtyping_not_performed')\n  ) |&gt; \n  tab_spanner(\n    label = md('**B Strains**'),\n    columns = c('B', 'BVIC')\n  ) \n\n\n\n\n\n\n\nWeek\nA Strains\nB Strains\nTotal Tested\n\n\nA (H1N1) pdm09\nA H3N2\nA Subtype Unperf\nB\nB Victoria\n\n\n\n\n2023-10-08\n176\n16\n10\n3\n48\n3054\n\n\n2023-10-15\n212\n22\n13\n5\n68\n3057\n\n\n2023-10-22\n274\n26\n33\n11\n73\n3401\n\n\n2023-10-29\n239\n36\n49\n14\n68\n2916\n\n\n2023-11-05\n290\n41\n64\n15\n88\n3152\n\n\n2023-11-12\n478\n61\n115\n32\n130\n3288\n\n\n2023-11-19\n482\n102\n153\n44\n140\n3888\n\n\n2023-11-26\n573\n124\n139\n28\n139\n3007\n\n\n2023-12-03\n699\n176\n173\n25\n217\n4198\n\n\n2023-12-10\n962\n270\n244\n54\n258\n4491\n\n\n2023-12-17\n977\n280\n423\n94\n279\n4943\n\n\n2023-12-24\n1195\n318\n311\n43\n256\n5009\n\n\n2023-12-31\n1159\n284\n286\n34\n214\n4387\n\n\n2024-01-07\n1028\n308\n304\n66\n278\n4743\n\n\n2024-01-14\n789\n286\n326\n72\n216\n4829\n\n\n2024-01-21\n662\n235\n229\n43\n179\n3534\n\n\n2024-01-28\n507\n268\n253\n72\n199\n3679\n\n\n2024-02-04\n270\n130\n223\n97\n99\n2790"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#now-how-about-a-better-graph",
    "href": "presentation-exercise/presentation-exercise.html#now-how-about-a-better-graph",
    "title": "Presentation Exercise",
    "section": "Now how about a better graph?",
    "text": "Now how about a better graph?\nHere’s a question, will all of this generate a better graph?\n\n# Plot the data using a layered bar graph\nggplot(CDC_data_flu, aes(x = Week)) +\n  geom_bar(aes(y = A_H1N1_pdm09, fill = \"A (H1N1)pdm09\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_H3N2, fill = \"A (H3N2)\"), stat = \"identity\", color=\"black\", position = \"stack\") +\n  geom_bar(aes(y = A_Subtyping_not_performed, fill = \"A Subtyping not performed\"), stat = \"identity\", color=\"black\", position = \"stack\") +\n  geom_bar(aes(y = B, fill = \"B (Linage Not Perfromed)\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = BVIC, fill = \"B Victoria Lineage\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  labs(title = \"Influenza Positive Tests Reported to CDC\",\n       subtitle = \"U.S. Public Health Laboratories, National Summary, 2023-2024 Season\",\n       x = \"Week\",\n       y = \"Number of Positive Specimens\",\n       fill = \"Influenza Type\") + \n  theme_minimal() + scale_x_datetime()\n\n\n\n\n\n\n\n\nWhy, yes it does. I can now see all five of the colors represented by the surviving data types. Cleaning up the data a bit and presenting it in a coherent format does help the process of figure creation.\nI am noting that my graph still does not look like the graph presented at the CDC site. The maximum values of data columns only reaches approximately 1,200. The CDC figure maximums approach 2,200. I am not convinced that this data is the data used to generate the figure presented on the CDC website.\n##One more time with feeling! So now I am going to try all of that with the original year/week format for the data. Wish me “Qapla!”\n\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(ggbreak))\n\n#Load excel data file\n#Data file from CDC \"COVID-19_Vaccinations_in_the_United_States_Jurisdiction_20240208\"\ndata_location &lt;- here::here(\"presentation-exercise\",\"Flu Chart Data2.xlsx\")\nCDC_data_flu2 &lt;- readxl::read_excel(data_location)\n\n\n#Save a rds version\nsave_data_location &lt;- here::here(\"presentation-exercise\",\"CDC_Flu_Chart_Data2.rds\")\nsaveRDS(CDC_data_flu2, file = save_data_location)\n\n#Let's filter the data to get rid of the columns with all zero and take a quick look!\nCDC_data_flu2 &lt;- CDC_data_flu2 %&gt;% \n  select(Week, A_H1N1_pdm09, A_H3N2, A_Subtyping_not_performed, B, BVIC, `Total _Tested`)\n\nCDC_data_flu2 |&gt; \n  gt() |&gt; \n  cols_label(\n    Week = 'Week',\n    A_H1N1_pdm09 = 'A (H1N1) pdm09',\n    A_H3N2 = 'A H3N2',\n    A_Subtyping_not_performed = 'A Subtype Unperf',\n    B = 'B',\n    BVIC = 'B Victoria',\n    `Total _Tested`= 'Total Tested'\n  ) |&gt; \n  tab_spanner(\n    label = md('**A Strains**'),\n    columns = c('A_H1N1_pdm09', 'A_H3N2', 'A_Subtyping_not_performed')\n  ) |&gt; \n  tab_spanner(\n    label = md('**B Strains**'),\n    columns = c('B', 'BVIC')\n  ) \n\n\n\n\n\n\n\nWeek\nA Strains\nB Strains\nTotal Tested\n\n\nA (H1N1) pdm09\nA H3N2\nA Subtype Unperf\nB\nB Victoria\n\n\n\n\n202340\n176\n16\n10\n3\n48\n3054\n\n\n202341\n212\n22\n13\n5\n68\n3057\n\n\n202342\n274\n26\n33\n11\n73\n3401\n\n\n202343\n239\n36\n49\n14\n68\n2916\n\n\n202344\n290\n41\n64\n15\n88\n3152\n\n\n202345\n478\n61\n115\n32\n130\n3288\n\n\n202346\n482\n102\n153\n44\n140\n3888\n\n\n202347\n573\n124\n139\n28\n139\n3007\n\n\n202348\n699\n176\n173\n25\n217\n4198\n\n\n202349\n962\n270\n244\n54\n258\n4491\n\n\n202350\n977\n280\n423\n94\n279\n4943\n\n\n202351\n1195\n318\n311\n43\n256\n5009\n\n\n202352\n1159\n284\n286\n34\n214\n4387\n\n\n202401\n1028\n308\n304\n66\n278\n4743\n\n\n202402\n789\n286\n326\n72\n216\n4829\n\n\n202403\n662\n235\n229\n43\n179\n3534\n\n\n202404\n507\n268\n253\n72\n199\n3679\n\n\n202405\n270\n130\n223\n97\n99\n2790\n\n\n\n\n\n\n# Plot the data using a layered bar graph\nggplot(CDC_data_flu2, aes(x = Week)) +\n  geom_bar(aes(y = A_H1N1_pdm09, fill = \"A (H1N1)pdm09\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = A_H3N2, fill = \"A (H3N2)\"), stat = \"identity\", color=\"black\", position = \"stack\") +\n  geom_bar(aes(y = A_Subtyping_not_performed, fill = \"A Subtyping not performed\"), stat = \"identity\", color=\"black\", position = \"stack\") +\n  geom_bar(aes(y = B, fill = \"B (Linage Not Perfromed)\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  geom_bar(aes(y = BVIC, fill = \"B Victoria Lineage\"), stat = \"identity\", color=\"black\", position = \"stack\") + \n  labs(title = \"Influenza Positive Tests Reported to CDC\",\n       subtitle = \"U.S. Public Health Laboratories, National Summary, 2023-2024 Season\",\n       x = \"Week\",\n       y = \"Number of Positive Specimens\",\n       fill = \"Influenza Type\") + \n  theme_minimal() + theme(axis.text.x = element_text(face=\"bold\", color=\"black\", \n                           size=8, angle=90),\n          axis.text.y = element_text(face=\"bold\", color=\"black\", \n                           size=8)) + theme( axis.line = element_line(colour = \"black\", linewidth = 0.75, linetype = \"solid\")) + scale_x_break(c(202352, 202401))"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html",
    "href": "ml-models-exercise/ml-models-exercise.html",
    "title": "ml-models-exercise",
    "section": "",
    "text": "#Call a bunch of libraries.\nsuppressPackageStartupMessages(library(tidyverse))\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(tidymodels))\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\nWarning: package 'broom' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(broom)) \nsuppressPackageStartupMessages(library(here))\n\nWarning: package 'here' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(readxl))\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(readr)) \nsuppressPackageStartupMessages(library(dplyr)) \nsuppressPackageStartupMessages(library(tidyr)) \nsuppressPackageStartupMessages(library(skimr))\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(gt))\n\nWarning: package 'gt' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(dslabs))\n\nWarning: package 'dslabs' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(plotly))\n\nWarning: package 'plotly' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(gapminder))\n\nWarning: package 'gapminder' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(parsnip))\nsuppressPackageStartupMessages(library(tune))\nsuppressPackageStartupMessages(library(recipes))\nsuppressPackageStartupMessages(library(workflows))\nsuppressPackageStartupMessages(library(yardstick))\nsuppressPackageStartupMessages(library(rsample))\nsuppressPackageStartupMessages(library(modeldata))\n\n\n#Spring planting.\nrngseed = 1234\n#Data processing.\n\n#Redoing the data from scratch.  I believe that the \"7\" in the original data was for native american/pacific islander, the \"88\" may have been for \"other\".\n\n#Load excel data file\ndata_location &lt;- here::here(\"ml-models-exercise\", \"Mavoglurant_A2121_nmpk.csv\")\nMav_data &lt;- read.csv(data_location)\n\n#Save a rds version\nsave_data_location &lt;- here::here(\"ml-models-exercise\", \"mav_data.rds\")\nsaveRDS(Mav_data, file = save_data_location)\n\n\n#Keeping only OCC=1.\nOCC_Mav1 &lt;- Mav_data %&gt;% filter(OCC == 1)\nOCC_Mav1 &lt;- OCC_Mav1 %&gt;% filter(OCC == 1)\nOCC_Mav1 &lt;- na.omit(OCC_Mav1)\n\nDV_Mav1 &lt;- OCC_Mav1 %&gt;% filter(DV &gt; 0)\nDV_Mav1 &lt;- DV_Mav1 %&gt;% filter(DV &gt; 0)\nDV_Mav1 &lt;- na.omit(DV_Mav1)\n\ndf_Y &lt;- OCC_Mav1 %&gt;% filter(TIME &gt; 0) %&gt;% group_by(ID) %&gt;% summarise(Y=sum(DV))\ndf_time0 &lt;- OCC_Mav1 %&gt;% filter(TIME == 0)\nCombo_Mav1 &lt;- left_join(df_Y, df_time0, by = \"ID\")\n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% \n  select(Y,DOSE,AGE,SEX,RACE,WT,HT)\n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(RACE = ifelse(RACE %in% c(7,88), 3, RACE ))\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(RACE = factor(RACE))\n\n#HT is in meters, WT is in kilograms.\nCombo_Mav1$BMI &lt;- Combo_Mav1$WT / ((Combo_Mav1$HT)^2)  \n\nCombo_Mav1 &lt;- Combo_Mav1 %&gt;% mutate(\n  SEX = ifelse(SEX == 1, \"M\", \"F\" ),\n  SEX = factor(SEX)\n  )\n\nprint(Combo_Mav1)\n\n# A tibble: 120 × 8\n       Y  DOSE   AGE SEX   RACE     WT    HT   BMI\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2691.    25    42 M     2      94.3  1.77  30.1\n 2 2639.    25    24 M     2      80.4  1.76  26.0\n 3 2150.    25    31 M     1      71.8  1.81  21.9\n 4 1789.    25    46 F     1      77.4  1.65  28.4\n 5 3126.    25    41 F     2      64.3  1.56  26.4\n 6 2337.    25    27 M     2      74.1  1.83  22.1\n 7 3007.    25    23 M     1      87.9  1.85  25.7\n 8 2796.    25    20 M     3      61.9  1.73  20.7\n 9 3866.    25    23 M     2      65.3  1.65  24.0\n10 1762.    25    28 M     1     104.   1.84  30.6\n# ℹ 110 more rows\n\n#Save a rds version\nsave_data_location &lt;- here::here(\"Combo_Mav1.rds\")\nsaveRDS(Combo_Mav1, file = save_data_location)\n\n#Okay, that looks pretty good.\n#Making the training/testing data.\nset.seed(rngseed)\n\ndata_split &lt;- initial_split(Combo_Mav1, prop = 3/4)\n\ntrain_data &lt;- training(data_split)\ntest_data  &lt;- testing(data_split)\n\nprint(train_data)\n\n# A tibble: 90 × 8\n       Y  DOSE   AGE SEX   RACE     WT    HT   BMI\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 3004.  50      28 M     1      83.2  1.74  27.5\n 2 1347.  25      41 M     2      81    1.75  26.5\n 3 2772.  37.5    28 M     1      78.3  1.72  26.5\n 4 2028.  25      28 F     2      58.9  1.58  23.6\n 5 2353.  50      37 M     2      99.1  1.78  31.3\n 6  826.  25      30 M     2     105.   1.88  29.7\n 7 3866.  25      23 M     2      65.3  1.65  24.0\n 8 3126.  25      41 F     2      64.3  1.56  26.4\n 9 1108.  25      48 F     2      79.5  1.62  30.3\n10 2815.  37.5    26 M     2      84.5  1.77  27.0\n# ℹ 80 more rows\n\nprint(test_data)\n\n# A tibble: 30 × 8\n       Y  DOSE   AGE SEX   RACE     WT    HT   BMI\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2549.  25      46 M     1      83    1.78  26.2\n 2 2353.  37.5    43 F     1      64.4  1.56  26.5\n 3 2009.  37.5    19 M     2      86.1  1.91  23.6\n 4 2934.  37.5    46 M     1      71.2  1.67  25.5\n 5 2085.  37.5    37 M     1     102.   1.81  31.2\n 6 4835.  50      42 F     1      58    1.58  23.2\n 7 3514.  50      32 M     2      78.9  1.74  26.1\n 8 3906.  50      47 M     2      89.3  1.69  31.3\n 9 3105.  50      45 M     1      99.1  1.81  30.2\n10 2027.  25      20 M     1      80.5  1.88  22.8\n# ℹ 20 more rows\n\n#I kept getting an error Warning: NAs introduced by coercion\", so I am replacing M/F with 1/2.\ntrain_data1 &lt;- train_data\ntrain_data1 &lt;- train_data1 %&gt;% mutate(\n  SEX = ifelse(SEX == \"M\", 1, 2 ),\n  SEX = factor(SEX)\n  )\n\n\n#Logistic Model of all data with all variables.  \nMAV_log_model &lt;- glm(Y ~ ., data = train_data1)\ntableA1 &lt;- broom::tidy(MAV_log_model)\nprint(tableA1)\n\n# A tibble: 9 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  29701.    13021.       2.28  2.52e- 2\n2 DOSE            57.0       5.92     9.64  4.33e-15\n3 AGE              3.53      9.57     0.368 7.13e- 1\n4 SEX2          -583.      282.      -2.07  4.20e- 2\n5 RACE2          169.      154.       1.10  2.75e- 1\n6 RACE3         -270.      249.      -1.08  2.82e- 1\n7 WT             126.       76.1      1.66  1.02e- 1\n8 HT          -15337.     7345.      -2.09  3.99e- 2\n9 BMI           -481.      241.      -1.99  5.00e- 2\n\n#Trying it this way... with train data.\nlinear_reg() %&gt;% set_engine(\"glm\")\n\nLinear Regression Model Specification (regression)\n\nComputational engine: glm \n\nmodel_trial &lt;- linear_reg()\nfit_trial1 &lt;- model_trial %&gt;% fit(Y ~ ., data = train_data1)\n\ntidy(fit_trial1)\n\n# A tibble: 9 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  29701.    13021.       2.28  2.52e- 2\n2 DOSE            57.0       5.92     9.64  4.33e-15\n3 AGE              3.53      9.57     0.368 7.13e- 1\n4 SEX2          -583.      282.      -2.07  4.20e- 2\n5 RACE2          169.      154.       1.10  2.75e- 1\n6 RACE3         -270.      249.      -1.08  2.82e- 1\n7 WT             126.       76.1      1.66  1.02e- 1\n8 HT          -15337.     7345.      -2.09  3.99e- 2\n9 BMI           -481.      241.      -1.99  5.00e- 2\n\npredictions &lt;- predict(fit_trial1, train_data1)\nresiduals_mod &lt;- train_data1$Y - predictions\nrmse_mod &lt;- sqrt(mean(residuals_mod^2))\n\nWarning in mean.default(residuals_mod^2): argument is not numeric or logical:\nreturning NA\n\nprint(rmse_mod)\n\n[1] NA\n#LASSO Regression Model.\nsuppressPackageStartupMessages(library(glmnet))\n\nWarning: package 'glmnet' was built under R version 4.3.3\n\nX &lt;- as.matrix(train_data1[,c(\"DOSE\",\"AGE\",\"SEX\",\"RACE\",\"WT\",\"HT\", \"BMI\")])\nY &lt;- train_data1$Y\n\nMAV_LASSO_cv &lt;- cv.glmnet(X,Y, alpha = 1)\noptimal_lambda &lt;- MAV_LASSO_cv$lambda.min\n\ncoef(MAV_LASSO_cv)\n\n8 x 1 sparse Matrix of class \"dgCMatrix\"\n                     s1\n(Intercept) 1602.673193\nDOSE          39.806501\nAGE            .       \nSEX            .       \nRACE           .       \nWT            -6.846157\nHT             .       \nBMI            .       \n\nprint(MAV_LASSO_cv)\n\n\nCall:  cv.glmnet(x = X, y = Y, alpha = 1) \n\nMeasure: Mean-Squared Error \n\n    Lambda Index Measure     SE Nonzero\nmin    0.1    95  450640  97315       7\n1se  173.1    15  537481 124533       2\n\nplot(MAV_LASSO_cv)\n\n\n\n\n\n\n\nMAV_LASSO_cv1 &lt;- glmnet(X, Y, alpha = 1, lambda = optimal_lambda)\n\ncoef(MAV_LASSO_cv1)\n\n8 x 1 sparse Matrix of class \"dgCMatrix\"\n                       s0\n(Intercept)  25709.796122\nDOSE            55.051486\nAGE              2.448014\nSEX           -610.533827\nRACE           -22.180979\nWT              99.753142\nHT          -12772.973957\nBMI           -389.379305\n\nprint(MAV_LASSO_cv1)\n\n\nCall:  glmnet(x = X, y = Y, alpha = 1, lambda = optimal_lambda) \n\n  Df  %Dev Lambda\n1  7 57.75 0.1014\n\nplot(MAV_LASSO_cv1)  #Why am I getting an empty plot here?\n\n#I optimized instead of just setting lambda to 0.1.  As it turns out, the optimal value is approximately 0.1.\n#Let's just keep it un-optimized.\n\nMAV_LASSO &lt;- glmnet(X, Y, alpha = 1, lambda = optimal_lambda)\n\nprint(MAV_LASSO)\n\n\nCall:  glmnet(x = X, y = Y, alpha = 1, lambda = optimal_lambda) \n\n  Df  %Dev Lambda\n1  7 57.75 0.1014\n\nplot(MAV_LASSO)\n\n\n\n\n\n\n\ny_predicted &lt;- predict(MAV_LASSO, s = optimal_lambda, newx = X)\nsst &lt;- sum((Y - mean(Y))^2)\nsse &lt;- sum((y_predicted - Y)^2)\nrsq &lt;- 1 - sse/sst\nprint(rsq)\n\n[1] 0.5775333\n#Random Forest Model:\n\nsuppressPackageStartupMessages(library(parsnip))\nsuppressPackageStartupMessages(library(ranger))\n\nWarning: package 'ranger' was built under R version 4.3.3\n\nsuppressPackageStartupMessages(library(dplyr))\n\nMAV_rf_model &lt;- ranger(Y ~ ., data = train_data1)\n\nprint(MAV_rf_model)\n\nRanger result\n\nCall:\n ranger(Y ~ ., data = train_data1) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      90 \nNumber of independent variables:  7 \nMtry:                             2 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       556823.5 \nR squared (OOB):                  0.3877549 \n\nrf_model &lt;- rand_forest() %&gt;% set_mode(\"regression\") %&gt;% set_engine(\"ranger\", seed = rngseed)\n\nMAV_rf_model1 &lt;- fit(rf_model, data = train_data1, formula(Y ~ .))\n\nprint(MAV_rf_model1)\n\nparsnip model object\n\nRanger result\n\nCall:\n ranger::ranger(x = maybe_data_frame(x), y = y, seed = ~rngseed,      num.threads = 1, verbose = FALSE) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      90 \nNumber of independent variables:  7 \nMtry:                             2 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       561870.5 \nR squared (OOB):                  0.3822056 \n\n#I got the exact same thing for both outputs, so I might have done something right... or the same thing wrong twice. ¯\\_(ツ)_/¯"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#the-r-coding-is-beyond-me-for-this-part.-i-dont-even-know-where-to-start.",
    "href": "ml-models-exercise/ml-models-exercise.html#the-r-coding-is-beyond-me-for-this-part.-i-dont-even-know-where-to-start.",
    "title": "ml-models-exercise",
    "section": "The R coding is beyond me for this part. I don’t even know where to start.",
    "text": "The R coding is beyond me for this part. I don’t even know where to start.\nlibrary(rpart.plot) # for visualizing a decision tree library(vip) # for variable importance plots\nbootstrap_rset_data &lt;- bootstraps(train_data1, times = 100)\ntune_spec &lt;- decision_tree( cost_complexity = tune(), tree_depth = tune() ) %&gt;% set_engine(“rpart”) %&gt;% set_mode(“classification”)\ntree_grid &lt;- grid_regular(cost_complexity(), tree_depth(), levels = 5)\n#Linear Model rf_model_wf &lt;- workflow() %&gt;% add_model(rf_model) %&gt;% add_formula(class ~ .)\nrf_model_res &lt;- rf_model_wf %&gt;% tune_grid( resamples = bootstrap_rset_data, grid = tree_grid )"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html#histogram-plots-for-the-continuous-outcomes.",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html#histogram-plots-for-the-continuous-outcomes.",
    "title": "An example exploratory analysis script",
    "section": "Histogram plots for the continuous outcomes.",
    "text": "Histogram plots for the continuous outcomes.\n\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf"
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html#boxplot-of-weight-by-smoking-status",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html#boxplot-of-weight-by-smoking-status",
    "title": "An example exploratory analysis script",
    "section": "Boxplot of weight by smoking status",
    "text": "Boxplot of weight by smoking status\n\n# Boxplot of Weight by Smoke category, boxes filled by Gender\np5 &lt;- mydata %&gt;%\n    ggplot(aes(x=Smoke, y=Weight, fill=Smoke)) + \n    geom_boxplot() +\n    theme(legend.position = \"none\")\n\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"Weight_by_smoke.png\")\nggsave(filename = figure_file, plot=p5)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html#scatterplot-of-weight-by-age-of-first-alcohol-stratified-by-gender",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html#scatterplot-of-weight-by-age-of-first-alcohol-stratified-by-gender",
    "title": "An example exploratory analysis script",
    "section": "Scatterplot of Weight by Age of First Alcohol stratified by gender",
    "text": "Scatterplot of Weight by Age of First Alcohol stratified by gender\n\n# Scatter plot of AlkyAge vs Weight stratified by Gender\np6 &lt;- mydata %&gt;%\n    ggplot(aes(x=Weight, y=AlkyAge, color=Gender)) +\n    geom_point()  # Adds scatter plot points\n\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"AlkyAge_by_Weight_stratified.png\")\nggsave(filename = figure_file, plot=p6)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/mclar/Desktop/EPID 8060e/Repository/mclarkemiller_MADA\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "M. Clarke Miller Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello!\n\n\n\n\nI hope you are having a pleasant day!\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFair warning! Most of this content is still under construction!"
  }
]